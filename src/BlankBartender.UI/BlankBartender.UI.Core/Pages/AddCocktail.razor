@page "/cocktail/create"
<MudStack Spacing="4">
    <MudStack Class="header-container" Row>
        <MudItem>
            <MudText Color="Color.Tertiary" Typo="Typo.h4" Align="Align.Center">
                Create new cocktail
            </MudText>
        </MudItem>
        <MudItem>
            <MudSwitch @bind-Value="useAvailableLiquids"
                       @bind-Value:after="OnLiquidPoolChange"
                       Label="@(useAvailableLiquids ? "avaiable liquids" : "all liquids")"
                       Color="Color.Success"
                       Size="Size.Medium"
                       UncheckedColor="Color.Error"
                       style="max-width: 70px; text-align: center" />
        </MudItem>


    </MudStack>

    <MudStack Spacing="6" AlignItems="AlignItems.Center" Class="justify-space-between mud-width-full justify-center">
        @if (drink != null && drink.Ingredients != null && drink.Ingredients.Count > 0)
        {
            @foreach (var ingredient in drink.Ingredients)
            {
                <MudGrid Class="justify-center">
                    <MudItem xs="10" sm="10">
                        <MudStack AlignItems="AlignItems.Center" Class="justify-center mb-1" Row>
                            <MudText Align="Align.Center" Typo="Typo.body2">@ingredient.Key: @ingredient.Value.ToString() ml</MudText>
                            <MudIconButton Icon="@Icons.Material.Filled.Remove" Color="Color.Error" Size="Size.Small" OnClick="@(() => RemoveIngredient(ingredient.Key) )" />
                        </MudStack>
                        <MudSlider @bind-Value="drink.Ingredients[ingredient.Key]" Min="1" Max="200" Size="Size.Medium" ValueLabel="true" ValueLabelFormat=@("0 ml") />
                    </MudItem>
                </MudGrid>
            }
        }
        @if (liquids != null)
        {
            if (!openPopup)
            {
                <MudStack AlignItems="AlignItems.Center" Style="width:80vw" Class="justify-center mt-4" Row>
                    <MudAutocomplete @bind-Value="currentLiquid"
                                     SearchFunc="@( (value, searchString) => Task.FromResult(string.IsNullOrEmpty(value) || value == currentLiquid ? liquids : liquids.Where(x => x.Contains(value, StringComparison.InvariantCultureIgnoreCase))))"
                                     Label=@(string.IsNullOrEmpty(currentLiquid) ? "Select liquid" : "Pending liquid add")
                                     Clearable="true"
                                     Strict="true">
                        <NoItemsTemplate>
                            <MudText Align="Align.Center" Class="px-4 py-1">
                                No items found
                            </MudText>
                        </NoItemsTemplate>
                    </MudAutocomplete>
                    @if (currentLiquid != null)
                    {
                        <MudIconButton Icon="@Icons.Material.Filled.Add"
                                       Disabled="@(currentLiquid == null)"
                                       Color="@((drink.IsProcessing ? Color.Warning : Color.Primary))"
                                       Variant="Variant.Filled"
                                       OnClick="AddIngredient" />
                    }
                </MudStack>
            }

            if (drink.Ingredients.Count > 0)
            {
                <MudStack AlignItems="AlignItems.Center" Row>
                    @if ((!drink.IsProcessing && !_statusService.isProcessing))
                    {
                        @if (!openPopup)
                        {
                            <MudButton OnClick="@( () => openPopup = true)"
                                       Disabled="@_statusService.isProcessing"
                                       Color="@((drink.IsProcessing ? Color.Warning : Color.Primary))"
                                       Variant="Variant.Outlined">
                                Save
                            </MudButton>
                        }
                    }

                    @if (!openPopup && useAvailableLiquids && ((!drink.IsProcessing && !_statusService.isProcessing) || (drink.IsProcessing && _statusService.isProcessing)))
                    {
                        <MudButton OnClick="@(async () => await ProcessCustomDrink(drink))"
                                   Disabled="@_statusService.isProcessing"
                                   Color="@((drink.IsProcessing ? Color.Warning : Color.Primary))"
                                   Variant="Variant.Filled">
                            @(drink.IsProcessing ? "Processing" : "Make")
                        </MudButton>
                    }
                </MudStack>

                if (openPopup)
                {
                    <MudStack AlignItems="AlignItems.Center">
                        <MudTextField @bind-Value="drink.Name" Label="Please enter cocktail name" Style="width:300px" Variant="Variant.Text"></MudTextField>
                        <MudButton OnClick="@(() => SaveCocktail(drink))"
                                   Disabled="@_statusService.isProcessing"
                                   Color="@((drink.IsProcessing ? Color.Warning : Color.Primary))"
                                   Variant="Variant.Filled">
                            Finalize cocktail
                        </MudButton>
                    </MudStack>
                }
            }

        }

    </MudStack>

</MudStack>


<style>
    .header-container {
        align-items: center;
        align-self: center;
        justify-content: center;
        max-width: 240px;
    }
</style>
