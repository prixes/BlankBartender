@page "/Maintenance"

<MudStack Spacing="4">

    <HeaderWithSearch Title="Maintenance" />
    <MudStack Class="d-flex align-center justify-center mb-3" Row>

        <MudSwitch @bind-Value="UseCameraAI"
                   @bind-Value:after="(async () => await UpdateSettings())"
                   Label="@(UseCameraAI ? "Use Camera AI" : "No Camera AI")"
                   Size="Size.Small"
                   Color="Color.Success"
                   UncheckedColor="Color.Error" />

        <MudSwitch @bind-Value="UseStirrer"
                   @bind-Value:after="(async () => await UpdateSettings())"
                   Label="@(UseStirrer ? "Use Stirrer" : "Not using Stirrer")"
                   Color="Color.Success"
                   Size="Size.Small"
                   UncheckedColor="Color.Error" />

    </MudStack>
    <MudStack Class="d-flex align-center justify-center flex-grow-1 gap-6" Row>
        @if (!isRemoveLiquid)
        {
            @if (!isAddLiquid)
            {
                <MudButton OnClick="@( () => isAddLiquid = true)"
                           Color="Color.Primary"
                           Variant="Variant.Filled"
                           Size="Size.Small">
                    Add liquid
                </MudButton>
            }
            else
            {
                <MudStack AlignItems="AlignItems.Center" Style="width:300px" Class="justify-center" Row>
                    <MudTextField @bind-Value="liquidName" Label="Please enter cocktail name" Style="width:300px" Variant="Variant.Text"></MudTextField>
                    <MudButton OnClick="@(() => AddLiquid())"
                               Color="Color.Primary"
                               Variant="Variant.Filled"
                               Size="Size.Small">
                        Confirm adding
                    </MudButton>
                </MudStack>
            }
        }
        @if (!isAddLiquid)
        {
            @if (!isRemoveLiquid)
            {
                <MudButton OnClick="@( () => isRemoveLiquid = true)"
                           Color="Color.Primary"
                           Variant="Variant.Filled"
                           Size="Size.Small">
                    Remove liquid
                </MudButton>
            }
            else
            {
                <MudStack AlignItems="AlignItems.Center" Class="justify-center" Row>
                    <MudSelect T="string"
                               Label="Select liquid to remove"
                               AnchorOrigin="Origin.BottomCenter"
                               @bind-Value="liquidName"
                               SearchFunc="SearchItems"
                               Searchable="true">
                        @if (liquids != null)
                        {
                            @foreach (var liquid in liquids)
                            {
                                <MudSelectItem T="string" Value="liquid">@liquid</MudSelectItem>
                            }
                        }
                    </MudSelect>
                    <MudButton OnClick="@(() => RemoveLiquid())"
                               Color="Color.Primary"
                               Variant="Variant.Filled"
                               Size="Size.Small">
                        Confirm remove
                    </MudButton>
                </MudStack>
            }

        }
    </MudStack>

    <MudText Color="Color.Primary" Typo="Typo.body1" Align="Align.Center" GutterBottom="true">
        Pump control
    </MudText>
    <MudStack Class="d-flex align-center justify-center flex-grow-1" Row>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small"
                   OnClick="@(async () => await StartPumps())">
            Start All
        </MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small"
                   OnClick="@(async () => await StopPumps())">
            Stop All
        </MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small"
                   OnClick="@(async () => await InitializeLiquidFlow())">
            Initialize
        </MudButton>

    </MudStack>

    <MudSimpleTable>
        <thead>
            <tr>
                <th style="width:8%; padding: 0px">Pump No</th>
                <th style="width:5%; padding-left: 1.25rem">HW pin</th>
                <th style="width:62%; padding-left: 2.25rem">Liquid</th>
                <th style="width:25%; padding-left: 1rem">Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (pumps != null)
            {
                @foreach (var pump in pumps)
                {
                    <tr>
                        <td style="padding-left: 0.5rem">
                            <MudPaper>@pump.Number</MudPaper>
                        </td>
                        <td>
                            <MudPaper>@pump.Pin</MudPaper>
                        </td>
                        <td >
                            <MudItem Class="d-flex margin-autocomplete">
                                @if (selectedLiquids[pump.Number - 1] != @pump.Value)
                                {
                                    <MudIconButton Icon="@Icons.Material.Outlined.Refresh"
                                                   Color="Color.Warning"
                                                   Size="Size.Small"
                                                   OnClick="() => selectedLiquids[pump.Number - 1] = pump.Value">
                                    </MudIconButton>
                                }
                                <MudAutocomplete @bind-Value="selectedLiquids[pump.Number - 1]"
                                                 SearchFunc="@( (value, searchString) => Task.FromResult(string.IsNullOrEmpty(value) || value == pump.Value ? liquids : liquids.Where(x => x.Contains(value, StringComparison.InvariantCultureIgnoreCase))))"
                                                 Label=@(@selectedLiquids[pump.Number - 1] == pump.Value ? "Current liquid" : "Pending change")
                                                 Strict="true"
                                                 Class="@((selectedLiquids[pump.Number - 1] != @pump.Value) ? "pending" : "m-2")">
                                    <NoItemsTemplate>
                                        <MudText Align="Align.Center" Class="px-4 py-1">
                                            No items found
                                        </MudText>
                                    </NoItemsTemplate>
                                </MudAutocomplete>
                            </MudItem>
                        </td>
                        <td style="padding-left: 0.25rem">
                            <MudStack AlignItems="AlignItems.Center" >
                                @if (selectedLiquids[pump.Number - 1] != @pump.Value)
                                {
                                    <MudButton StartIcon="@Icons.Material.Outlined.Save"
                                               IconColor="Color.Warning"
                                               Variant="Variant.Filled"
                                               Color="Color.Primary"
                                               Size="Size.Small"
                                               OnClick="@(async () => await PumpLiquidChange(pump.Number, selectedLiquids[pump.Number - 1]))">
                                        @(isProcessing ? "Saving changes" : "SAVE")
                                    </MudButton>
                                }
                                else
                                {
                                    <MudButton Variant="Variant.Filled"
                                               Color="Color.Primary"
                                               Size="Size.Small"
                                               OnClick="@(async () => await PumpStateSwitch(pump.Number - 1))">
                                        @(isProcessing ? "Saving changes" : (pumpsSwitch[pump.Number - 1] ? "STOP" : "START"))
                                    </MudButton>
                                }
                            </MudStack>
                        </td>
                    </tr>
                }

            }
        </tbody>
    </MudSimpleTable>



</MudStack>



<style>
    .mud-simple-table table {
        table-layout: fixed;
    }

    .mud-simple-table table * tr > td, 
    .mud-simple-table table * tr th {
        table-layout: fixed;
        border-bottom: none !important;
    }
    .mud-input-adornment > .mud-button-root {
        display: none;
    }

    .margin-autocomplete {
        margin-left: 1.25rem;
        margin-right: 0px;
    }
</style>