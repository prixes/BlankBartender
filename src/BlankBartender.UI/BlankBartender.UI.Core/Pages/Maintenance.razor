@page "/Maintenance"

        <MudStack AlignItems="AlignItems.Center" Class="justify-space-between mud-width-full justify-center m-4">
            <HeaderWithSearch Title="Maintenance" />
            <MudStack Class="d-flex align-center justify-center flex-grow-1 gap-6 mb-5" Row>

                <MudSwitch @bind-Value="UseCameraAI"
                           @bind-Value:after="(async () => await UpdateSettings())"
                           Label="@(UseCameraAI ? "Use Camera AI" : "No Camera AI")"
                           Color="Color.Success"
                           UncheckedColor="Color.Error" />

                <br />
                <MudSwitch @bind-Value="UseStirrer"
                           @bind-Value:after="(async () => await UpdateSettings())"
                           Label="@(UseStirrer ? "Use Stirrer" : "Not using Stirrer")"
                           Color="Color.Success"
                           UncheckedColor="Color.Error" />

            </MudStack>
            @if (!isRemoveLiquid)
            {
                @if (!isAddLiquid)
                {
                    <MudButton OnClick="@( () => isAddLiquid = true)"
                               Color="Color.Primary"
                               Variant="Variant.Filled">
                        Add liquid
                    </MudButton>
                }
                else
                {
                    <MudStack AlignItems="AlignItems.Center" Style="width:300px" Class="justify-center" Row>
                        <MudTextField @bind-Value="liquidName" Label="Please enter cocktail name" Style="width:300px" Variant="Variant.Text"></MudTextField>
                        <MudButton OnClick="@(() => AddLiquid())"
                                   Color="Color.Primary"
                                   Variant="Variant.Filled">
                            Confirm adding
                        </MudButton>
                    </MudStack>
                }
            }
            @if (!isAddLiquid)
            {
                @if (!isRemoveLiquid)
                {
                    <MudButton OnClick="@( () => isRemoveLiquid = true)"
                               Color="Color.Primary"
                               Variant="Variant.Filled">
                        Remove liquid
                    </MudButton>
                }
                else
                {
                    <MudStack AlignItems="AlignItems.Center" Class="justify-center" Row>
                        <MudSelect T="string"
                                   Label="Select liquid to remove"
                                   AnchorOrigin="Origin.BottomCenter"
                                   @bind-Value="liquidName"
                                   SearchFunc="SearchItems"
                                   Searchable="true">
                            @if (liquids != null)
                            {
                                @foreach (var liquid in liquids)
                                {
                                    <MudSelectItem T="string" Value="liquid">@liquid</MudSelectItem>
                                }
                            }
                        </MudSelect>
                        <MudButton OnClick="@(() => RemoveLiquid())"
                                   Color="Color.Primary"
                                   Variant="Variant.Filled">
                            Confirm remove
                        </MudButton>
                    </MudStack>
                }

            }

            <MudStack Class="d-flex align-center justify-center flex-grow-1 gap-6" Row>
                <MudButton Variant="Variant.Filled" Color="Color.Primary"
                           OnClick="@(async () => await StartPumps())">
                    Start Pumps
                </MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Primary"
                           OnClick="@(async () => await StopPumps())">
                    Stop Pumps
                </MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Primary"
                           OnClick="@(async () => await InitializeLiquidFlow())">
                    Initialize
                </MudButton>

            </MudStack>

            <MudStack StretchItems="@StretchItems.All" Class="gap-11" Row>
                <MudItem xs="1">
                    <MudPaper>Pump Number</MudPaper>
                </MudItem>
                <MudItem xs="1">
                    <MudPaper>Hardware pin</MudPaper>
                </MudItem>
                <MudItem xs="9">
                    <MudPaper>Liquid</MudPaper>
                </MudItem>
                <MudItem xs="1">
                    <MudPaper>Actions</MudPaper>
                </MudItem>
            </MudStack>
            @if (pumps != null)
            {
                @foreach (var pump in pumps)
                {
                    <MudGrid Justify="Justify.Center">
                        <MudItem>
                            <MudPaper>@pump.Number</MudPaper>
                        </MudItem>
                        <MudItem>
                            <MudPaper>@pump.Pin</MudPaper>
                        </MudItem>
                        <MudItem>
                            <MudPaper>
                                @if (selectedLiquids[pump.Number - 1] != @pump.Value)
                                {
                                    <MudIconButton Icon="@Icons.Material.Outlined.Refresh"
                                                   Color="Color.Warning"
                                                   Size="Size.Small"
                                                   OnClick="() => selectedLiquids[pump.Number - 1] = pump.Value">
                                    </MudIconButton>
                                }
                                <MudAutocomplete @bind-Value="selectedLiquids[pump.Number - 1]"
                                                 SearchFunc="@( (value, searchString) => Task.FromResult(string.IsNullOrEmpty(value) || value == pump.Value ? liquids : liquids.Where(x => x.Contains(value, StringComparison.InvariantCultureIgnoreCase))))"
                                                 Label=@(@selectedLiquids[pump.Number - 1] == pump.Value ? "Current liquid" : "Pending change")
                                                 Strict="true"
                                                 Class="@((selectedLiquids[pump.Number - 1] != @pump.Value) ? "pending" : null)">
                                    <NoItemsTemplate>
                                        <MudText Align="Align.Center" Class="px-4 py-1">
                                            No items found
                                        </MudText>
                                    </NoItemsTemplate>
                                </MudAutocomplete>
                            </MudPaper>
                        </MudItem>
                        <MudItem>
                            <MudPaper>
                                @if (selectedLiquids[pump.Number - 1] != @pump.Value)
                                {
                                    <MudButton StartIcon="@Icons.Material.Outlined.Save"
                                               IconColor="Color.Warning"
                                               Variant="Variant.Filled"
                                               Color="Color.Primary"
                                               OnClick="@(async () => await PumpLiquidChange(pump.Number, selectedLiquids[pump.Number - 1]))">
                                        <MudText>@(isProcessing ? "Saving changes" : "Save")</MudText>
                                    </MudButton>
                                }
                                else
                                {
                                    <MudButton Variant="Variant.Filled"
                                               Color="Color.Primary"
                                               OnClick="@(async () => await PumpStateSwitch(pump.Number - 1))">
                                        @(isProcessing ? "Saving changes" : (pumpsSwitch[pump.Number - 1] ? "Stop" : "Start"))
                                    </MudButton>
                                }
                            </MudPaper>
                        </MudItem>
                    </MudGrid>
                }

            }


        </MudStack>

